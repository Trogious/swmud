/***************************************************************************
* swmud.pl
* ------------------------------------------------------------------------ *
*                     ____________   __     ______                         *
*   Aldegard    Jot  (   ___   ___| /  \   |  __  )   Thanos      Trog     *
*        ______________\  \|   |  /  ^   \ |     <_______________          *
*        \________________/|___|/___/"\___\|__|\________________/          *
*                  \   \/ \/   //  \   |  __  )(  ___/`                    *
*                    \       //  ^   \ |     <__)  \                       *
*                      \_!_//___/"\___\|__|\______/TM                      *
* (c) 2009                  M       U        D                Ver 1.0      *
* ------------------------------------------------------------------------ *
*                               <module_name>                              *
****************************************************************************/


/* This file was generated by Trog's granulate_structs.pl. */

#ifndef PC_DATA_H_
#define PC_DATA_H_
#include "../defines.h"
#include "../typedefs.h"

struct	pc_data
{
	CLAN_DATA			* clan; /* OBECNY klan */
	AREA_DATA			* area;
	char				* prefix;		/* Thanos */
	char				* homepage;
	char				* pwd;
	char				* email;
	char				* bamfin;
	char				* bamfout;
	char				* rank;
	char				* title;

	char				* fake_name;	/* do disguise -- Thanos */
	char				* fake_infl[6]; /* do disguise -- Thanos */
	char				* fake_desc;	/* do disguise -- Thanos */
	char				* fake_long;	/* do disguise -- Thanos */
	char				* fake_title;	/* do disguise -- Thanos */

	char				* bestowments;	/* Special bestowed commands	   */
	int64				flags;		/* Whether the player is deadly and whatever else we add.      */
	int					pkills;		/* Number of pkills on behalf of clan */
	int					pdeaths;	/* Number of times pkilled (legally?)  */
	int					mkills;		/* Number of mobs killed		   */
	int					mdeaths;	/* Number of deaths due to mobs	      */
	int					illegal_pk;	/* Number of illegal pk's committed   */
	long int			outcast_time;	/* The time at which the char was outcast */
	long int			restore_time;	/* The last time the char did a restore all */
	int					wizinvis;	/* wizinvis level */
	char				* invis_except; /* Thanos */
	int					min_snoop;	/* minimum snoop level */
	int					condition	[MAX_CONDS];
	int					learned		[MAX_SKILL];
	KILLED_DATA			killed		[MAX_KILLTRACK];
	int					auth_state;
	time_t				release_date;	/* Altrag: unIsolate date */
	char				* isolated_by;
	time_t				unsilence_date; /* Trog: unsilence date */
	char				* silenced_by;
	char				* bio;		/* Personal Bio */
	char				* authed_by;	/* what crazy imm authed this name ;) */
	char				* prompt;		/* User config prompts */
	int					pagerlen;	/* For pager (NOT menus) */
	int					addiction[10];
	int					drug_level[10];
	long				bank;
	int					security; //byTrog
	/* Added by Thanos */
	int					status_width; //szeroko¶æ i wysokosc lini statusu
	int					status_height;
	int					status_type;			//typ linii statusu
	char				* forbidden_cmd;			//zabrane komendy
	char				* afk_reason;			//powod awaya
	ALIAS_DATA			* first_alias;
	ALIAS_DATA			* last_alias;
	LAST_DATA			* first_last_tell;//last_tell
	LAST_DATA			* last_last_tell; //last_tell
	time_t				last_note;	//ostatnio przeczytana notka
	int					quest_points; // suma wszystkich zdobytych qp
	char				* quest_done;	// wszystkie questy zrobione przez gracza
	int					line_nr; // w której lini jest kursor (do qedit () )
	int					mprog_edit;
#if defined( ARMAGEDDON )
	int					practices;
#endif
	char				* editinfo;	/* w³asne notatki olcmanów */
	char				* ignorelist;	/* lista ignorowanych osób */
	/* handel data */
	CHAR_DATA			* trader;	  //sprzedawca
	OBJ_DATA			* trade_item;	  //przedmiot
	OBJ_DATA			* trade_dest;	  //np plecak gracza
	CHAR_DATA			* trade_pet;	  //lub zwierzak(a moze statek-w przyszlosci)
	int					trade_count;	//ilosc przedmiotow
	int					trade_price;	//laczna cena
	int					trade_type;	//rodzaj interesu
	int					bargain_max;	//max 'wytarg'
	int					curr_bargain;	//'wytarg' aktualny
	time_t				tmp_lastplayed;
	char				* tmp_site;
	int					tmp_timeplayed;
	char				* host;		// duplikat ch->desc->host i desc->user
	char				* user;		// tamte zmieniaja sie np. przy disco,
									// a te nie
	char				* last_dialog;	//ostatnio wypowiedziany tekst moba
	CHAR_DATA			* pMob_speaking; //mob z którym rozmawiamy
	FEVENT_DATA			* first_fevent; /*!< Trog: Force Events */
	FEVENT_DATA			* last_fevent;
	int					fevents;
	int					remembered_mob_bounty; /*!< Trog: vnum zapamietanego moba, za ktorego chcemy wystawic bounty */
	short int			hotel_safe_time; //Ganis: Przez ile sekund jeszcze gracz bedzie bezpieczny w hotelu
};

#endif //PC_DATA_H_
