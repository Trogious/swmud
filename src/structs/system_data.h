/***************************************************************************
* swmud.pl
* ------------------------------------------------------------------------ *
*                     ____________   __     ______                         *
*   Aldegard    Jot  (   ___   ___| /  \   |  __  )   Thanos      Trog     *
*        ______________\  \|   |  /  ^   \ |     <_______________          *
*        \________________/|___|/___/"\___\|__|\________________/          *
*                  \   \/ \/   //  \   |  __  )(  ___/`                    *
*                    \       //  ^   \ |     <__)  \                       *
*                      \_!_//___/"\___\|__|\______/TM                      *
* (c) 2009                  M       U        D                Ver 1.0      *
* ------------------------------------------------------------------------ *
*                               <module_name>                              *
****************************************************************************/


/* This file was generated by Trog's granulate_structs.pl. */

#ifndef SYSTEM_DATA_H_
#define SYSTEM_DATA_H_
#include "../defines.h"
#include "../typedefs.h"

struct	system_data
{
	int					maxplayers;		/* Maximum players this boot   */
	int					alltimemax;		/* Maximum players ever	  */
	char				* time_of_max;		/* Time of max ever */
	bool				NO_NAME_RESOLVING;	/* Hostnames are not resolved  */
	bool				DENY_NEW_PLAYERS;	/* New players cannot connect  */
	bool				WAIT_FOR_AUTH;		/* New players must be auth'ed */
	int					muse_level;		/* Level of muse channel */
	int					think_level;		/* Level of think channel LEVEL_HIGOD*/
	int					build_level;		/* Level of build channel LEVEL_BUILD*/
	int					log_level;		/* Level of log channel LEVEL LOG*/
	int					prog_level;		/* Trog: level aby zobaczyc LOG_PROG */
	int					comm_level;		/* -||-: level aby zobaczyc COMM */
	int					level_modify_proto;	/* Level to modify prototype stuff LEVEL_LESSER */
	int					level_override_private; /* override private flag */
	int					level_mset_player;	/* Level to mset a player */
	int					stun_plr_vs_plr;	/* Stun mod player vs. player */
	int					stun_regular;		/* Stun difficult */
	int					dam_plr_vs_plr;		/* Damage mod player vs. player */
	int					dam_plr_vs_mob;		/* Damage mod player vs. mobile */
	int					dam_mob_vs_plr;		/* Damage mod mobile vs. player */
	int					dam_mob_vs_mob;		/* Damage mod mobile vs. mobile */
	int					level_getobjnotake;	/* Get objects without take flag */
	int					level_forcepc;		/* The level at which you can use force on players. */
	int					max_sn;			/* Max skills */
	int64				save_flags;		/* Toggles for saving conditions */
	int					save_frequency;		/* How old to autosave someone */
	bool				lastcmd_log;		/*Thanos: ostatnio pisana komenda (w razie pada) */
	bool				log_all;		/*Thanos: czy loguje co pisz± gracze do pliku LOGALL.LOG*/
	int					downtype;		/*Thanos: sprawdza, czy mud pad³ ostatnio */
	int					tmpdowntype;		/*Thanos: sprawdza, czy mud pad³ ostatnio */
	bool				crashlog;		/*Thanos: czy pisaæ notki przy padach */
	bool				silent;			/*Thanos: czy wy¶wietlaæ texty typu 'Resetin newacad.are' */
	int					reboot_type;		/*Thanos: reboot/shutdown/copyover */
	bool				to_iso;			/*Thanos: czy mud ma konwertowaæ krainy w trakcie czytania */
	bool				test_only;		/* czy mud ma tylko testowaæ krainy i exit */
	char				* binfile;		/* argv[0] */
	char				* council;		/* lista councilów */
	char				* coders;			/* lista Koderów */
	char				* admins;			/* lista admindupków :P */
	char				* helpmasters;		/* ilsta Elaiterów */
	char				* denied_nicks;		/* lista nicków nie do przyjêcia */
	int					max_clan_id;	/* najwiekszy id klanu - dziala jak sekwencja w PostgreSQL */
};

#endif //SYSTEM_DATA_H_

