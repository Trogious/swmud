/***************************************************************************
* swmud.pl
* ------------------------------------------------------------------------ *
*                     ____________   __     ______                         *
*   Aldegard    Jot  (   ___   ___| /  \   |  __  )   Thanos      Trog     *
*        ______________\  \|   |  /  ^   \ |     <_______________          *
*        \________________/|___|/___/"\___\|__|\________________/          *
*                  \   \/ \/   //  \   |  __  )(  ___/`                    *
*                    \       //  ^   \ |     <__)  \                       *
*                      \_!_//___/"\___\|__|\______/TM                      *
* (c) 2009                  M       U        D                Ver 1.0      *
* ------------------------------------------------------------------------ *
*                               <module_name>                              *
****************************************************************************/


/* This file was generated by Trog's granulate_structs.pl. */

#ifndef SHIP_DATA_H_
#define SHIP_DATA_H_
#include "../defines.h"
#include "../typedefs.h"

struct ship_data
{
	SHIP_INDEX_DATA		* pIndexData;
	SHIP_DATA			* next;
	SHIP_DATA			* prev;
	SHIP_DATA			* next_in_starsystem;
	SHIP_DATA			* prev_in_starsystem;
	SHIP_DATA			* next_in_room;
	SHIP_DATA			* prev_in_room;
	TURRET_DATA			* first_turret;
	TURRET_DATA			* last_turret;
	HANGAR_DATA			* first_hangar;
	HANGAR_DATA			* last_hangar;
	ROOM_INDEX_DATA		* in_room;
	SPACE_DATA			* starsystem;
	CARGO_DATA			* first_cargo;
	CARGO_DATA			* last_cargo;
	MODULE_DATA			* first_module;
	MODULE_DATA			* last_module;
	SMAP_DATA			* first_smap;
	SMAP_DATA			* last_smap;
	TRANSPONDER_DATA	* first_trans;
	TRANSPONDER_DATA	* last_trans;
	SHIPDOCK_DATA		* first_dock;
	SHIPDOCK_DATA		* last_dock;
	ROOM_INDEX_DATA		* first_location;// Thanos -> wskaznik na pierwsza lokacje
	ROOM_INDEX_DATA		* last_location;// Thanos -> wskaznik na ostatnia lokacje
	int					vnum;		// Thanos: jesli 0 to statek jest stary
	char				* transponder;
	int					maxmodule;
	char				* filename;
	char				* name;
	char				* home;
	char				* description;
	char				* ship_title;
	char				* owner;
	char				* pilot;
	char				* copilot;
	char				* engineer;
	char				* dest;
	int					type;
	int					clazz;
	int					comm;
	int					sensor;
	int					astro_array;
	int					target_array;
	float				hyperspeed;
	float				hyperdistance;
	float				realspeed;
	float				currspeed;
	int					shipstate;
	int					shipstate1;
	int					statet0;
	int					missiletype;
	int					missilestate;
	int					missiles;
	int					maxmissiles;
	int					torpedos;
	int					maxtorpedos;
	int					rockets;
	int					maxrockets;
	int					lasers;
	int					ioncannons;
	int					tractorbeam;
	int					manuever;
	bool				hatchopen;
	bool				autorecharge;
	bool				autotrack;
	bool				autospeed;
	float				vx, vy, vz;	/* obecne polozenie */
	float				hx, hy, hz;	/* wspolrzedne ladowania shipa do systemu */
	float				jx, jy, jz;	/* wspolrzedna docelowa - lotu */
	float				sx, sy, sz;	/* wspolrzedna wejscia z hiper w nowym systemie */
	int					maxenergy;
	int					energy;
	int					shield;
	int					maxshield;
	int					hull;
	int					maxhull;
	ROOM_INDEX_DATA		* cockpit;
	ROOM_INDEX_DATA		* location;
	ROOM_INDEX_DATA		* lastdoc;
	ROOM_INDEX_DATA		* shipyard;
	ROOM_INDEX_DATA		* entrance;
	ROOM_INDEX_DATA		* engineroom;
	int					firstroom;
	int					lastroom;
	int					roomcount;	//Thanos
	ROOM_INDEX_DATA		* navseat;
	ROOM_INDEX_DATA		* pilotseat;
	ROOM_INDEX_DATA		* coseat;
	ROOM_INDEX_DATA		* gunseat;
	int					interdict;
	int					maxinterdict;
	int					trawler;//Aldegard
	int					cloack;
	int					maxcloack;
	long				collision;
	SHIP_DATA			* target0;
	SPACE_DATA			* currjump;
	int					chaff;
	int					maxchaff;
	bool				chaff_released;
	bool				autopilot;
	bool				camuflage;
	char				* cargofrom;//Aldegard
	int					maxcargo;//Aldegard from snipet
	int					cargo;
	int					cargotype;
	int					timer; // ile ma czasu do wybuchu
	CHAR_DATA			* killer; // no i kto go zepsul
	float				size;//urealnienie radar i look
	float				vXpos; //dla virtual starsystemów
	float				vYpos;
	char *				sXpos;
	char *				sYpos;
	char *				sslook;
	int					version;
	int64				flags;
	int64				tmp_flags;	// Thanos
	int					hypertimer;
	int					hyperready;
	int					calctimer;
	char				* lock_key;
	SHIP_DATA			* last_dock_with;
	int					level;
	int					efflux;

	//added by Thanos (statki publiczne)
	COURSE_DATA			* first_stop;
	COURSE_DATA			* last_stop;
	COURSE_DATA			* curr_stop;
	bool				ship_public;
	int					public_subclass;
	int					bus_pos;
};

#endif //SHIP_DATA_H_

